# This is a basic workflow to help you get started with Actions

name: Staging Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the staging branch
  push:
    branches: [staging]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set default working directory for all jobs to /app
defaults:
  run:
    working-directory: ./app

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Set environment variables
    env:
      APP_NAME: elg-search-tools-stage
      APP_ENV: staging
      CF_ORG: epa-surface-water
      CF_SPACE: owtbx-elg-staging
      CF_USER_STAGING: ${{ secrets.CF_USER_STAGING }}
      CF_PASSWORD_STAGING: ${{ secrets.CF_PASSWORD_STAGING }}
      ELG_BASIC_AUTH_USER_NAME: ${{ secrets.BASIC_AUTH_USER }}
      ELG_BASIC_AUTH_USER_PWD: ${{ secrets.BASIC_AUTH_PASSWORD }}
      ELG_GLOSSARY_AUTH: ${{ secrets.GLOSSARY_AUTH }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Set up node and npm
      - uses: actions/setup-node@master

      # Run front-end processes (install, lint, test, bundle)
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/client/.npm
          key: v1-npm-client-deps-${{ hashFiles('**/client/package-lock.json') }}
          restore-keys: v1-npm-client-deps-

      - name: Install front-end dependencies
        run: npm install
        working-directory: app/client

      - name: Lint front-end code
        run: npm run lint
        working-directory: app/client

      - name: Build front-end files
        run: VITE_APP_ENV="$APP_ENV" npm run build
        working-directory: app/client

      # Run CloudFoundry/Cloud.gov deployment
      - name: Set up Cloud Foundry CLI
        run: |
          curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&version=v7&source=github'
          sudo dpkg -i cf-cli_amd64.deb
          cf -v
          cf api https://api.fr.cloud.gov
          cf auth "$CF_USER_STAGING" "$CF_PASSWORD_STAGING"
          cf target -o "$CF_ORG" -s "$CF_SPACE"

      - name: Set application-level variables
        run: |
          cf set-env $APP_NAME "ELG_BASIC_AUTH_USER_NAME" "$ELG_BASIC_AUTH_USER_NAME" > /dev/null
          cf set-env $APP_NAME "ELG_BASIC_AUTH_USER_PWD" "$ELG_BASIC_AUTH_USER_PWD" > /dev/null
          cf set-env $APP_NAME "ELG_GLOSSARY_AUTH" "$ELG_GLOSSARY_AUTH" > /dev/null

      # Now that front-end is built in server/public, only push server dir to Cloud.gov
      - name: Deploy application to Cloud.gov
        run: cf push $APP_NAME --strategy rolling -f ../manifest-staging.yml -p . -t 180
        working-directory: app/server
