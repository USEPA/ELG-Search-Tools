# This is a basic workflow to help you get started with Actions

name: Production Build

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set shared environment variables
env:
  APP_VERSION: 2.0.0
  APP_ENV: production

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up node and npm
      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Run nodejs dependencies
      - name: Cache server app node modules
        uses: actions/cache@v4
        with:
          path: ~/app/server/.npm
          key: v1-npm-server-deps-${{ hashFiles('**/app/server/package-lock.json') }}
          restore-keys: v1-npm-server-deps-

      - name: Install server dependencies
        run: npm install
        working-directory: app/server

      # Run front-end processes (install, bundle)
      - name: Cache client app node modules
        uses: actions/cache@v4
        with:
          path: ~/app/client/.npm
          key: v1-npm-client-deps-${{ hashFiles('**/app/client/package-lock.json') }}
          restore-keys: v1-npm-client-deps-

      - name: Install front-end dependencies
        run: npm install
        working-directory: app/client

      - name: Build front-end files and move to server
        run: VITE_APP_ENV="$APP_ENV" npm run build
        working-directory: app/client

      - name: Remove unnecessary server app files
        run: rm -rf .env.example .eslintignore .eslintrc.js .prettierrc
        working-directory: app/server

      - name: Copy production manifest file to server app
        run: cp app/manifest-prod.yml app/server/manifest-prod.yml

      - name: Create production artifact
        uses: actions/upload-artifact@v4
        with:
          name: elg-v${{ env.APP_VERSION }}
          include-hidden-files: true
          path: app/server
